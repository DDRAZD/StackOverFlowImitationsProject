@model StackOverflowProject.ViewModels.LoginViewModel

@{ 
    ViewBag.Title = "Login";


}


<div class="row">
    <div class="col-sm-12">
        <div class="mx-auto loginbox" style="width:600px">
            <h4>Login</h4> 
            <form action="/account/login" method="post" class="needs-validation" novalidate="novalidate">
                @Html.AntiForgeryToken()

                <div class="form-group" mr-3>
                    <labal for="email" class="mr-1">Email</labal>
                    <input type="email" class="from-control" id="email" name="Email" required="required" autofocus="autofocus" value="@Model.Email" />
                    <div class="valid-feedback">Looks Good</div>
                    <div class="invalid-feedback">Invalid Email</div>
                </div>

                <div class="form-group" mr-3>
                    <labal for="password" class="mr-1">Password</labal>
                    <input type="password" class="from-control" id="password" name="Password" required="required"  value="@Model.Password" minlength="6" />
                    <div class="valid-feedback">Looks Good</div>
                    <div class="invalid-feedback">Invalid Password - this is checked by bootsrap for length and our validation script- not a real db comparison</div>
                </div>

                <button class="btn btn-success">Login</button>
                <div class="text-danger">
                    @Html.ValidationSummary()
                </div>
            </form>
        </div>

    </div>
</div>

<script>
    $("a[href='/account/login']").attr("id", "active");



    $(document).on("submit", ".needs-validation", validate);
    $(".needs-validation input").blur(validate);
    function validate(event) {
        if ($(".needs-validation")[0].checkValidity() == false) {

            event.preventDefault();
        }
        $(".needs-validation")[0].classList.add("was-validated");
    }
</script>